<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="boris_sim">

  <!-- Define environment variable properties -->
  <xacro:property name="ign_gazebo_resource_path" value="$(optenv IGN_GAZEBO_RESOURCE_PATH)" />
  <xacro:property name="ign_gazebo_resource_path_set" value="${ign_gazebo_resource_path != ''}" />

  <!-- Define simulation mode property to true -->
  <xacro:property name="simulation_mode" value="true" />
  
  <!-- Include Materials first to avoid duplicate definitions -->
  <xacro:include filename="$(find shark_description)/urdf/shark_materials.xacro" />
  
  <!-- Include needed components without ros2_control hardware -->
  <xacro:include filename="$(find sensors_description)/urdf/hokuyo.xacro" />
  <xacro:include filename="$(find sensors_description)/urdf/rgb_cam.xacro" />
  <xacro:include filename="$(find sensors_description)/urdf/realsense_camera.xacro" />
  
  <!-- Define base properties -->
  <xacro:property name="base_width" value="0.336" />
  <xacro:property name="base_len" value="0.5" />
  <xacro:property name="base_height" value="0.231" />
  <xacro:property name="wheel_radius" value="0.0825" />
  <xacro:property name="wheel_width" value="0.06" />
  <xacro:property name="wheel_separation" value="0.39" />
  <xacro:property name="caster_height" value="0.07" />
  
  <xacro:property name="dorso_width" value="0.338" />
  <xacro:property name="dorso_len" value="0.282" />
  <xacro:property name="dorso_height" value="0.765" />
  
  <xacro:property name="arm_support_width" value="0.336" />
  <xacro:property name="arm_support_len" value="0.325" />
  <xacro:property name="arm_support_height" value="0.047" />
  <xacro:property name="arm_z_position" value="0.34" />
  
  <!-- Create a generic differential drive base instead of using shark_base -->
  <link name="base_footprint">
    <inertial>
      <mass value="8"/>
      <inertia ixx="1.333e-06" ixy="0.0" ixz="0.0" iyy="1.333e-06" iyz="0.0" izz="1.333e-06"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="white"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
  </link>
  
  <link name="base_link">
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.009360416666666668" ixy="0.0" ixz="0.0" 
               iyy="0.030185416666666666" iyz="0.0" izz="0.020841666666666665"/>
    </inertial>
    <visual>
      <material name="lightgray"/>
      <geometry>
        <box size="${base_len} ${base_width} ${base_height}"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <box size="${base_len} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
  </link>
  
  <joint name="base_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 ${wheel_radius}"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  
  <!-- Left wheel -->
  <link name="left_wheel_link">
    <visual>
      <material name="darkgray"/>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="10"/>
      <inertia ixx="0.017098958333333334" ixy="0" ixz="0" 
               iyy="0.017098958333333334" iyz="0" izz="0.03003125"/>
    </inertial>
  </link>
  
  <joint name="left_wheel_joint" type="continuous">
    <axis xyz="0 1 0"/>
    <parent link="base_link"/>
    <child link="left_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.0 ${wheel_separation/2} ${-base_height/2}"/>
  </joint>
  
  <!-- Right wheel -->
  <link name="right_wheel_link">
    <visual>
      <material name="darkgray"/>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="10"/>
      <inertia ixx="0.017098958333333334" ixy="0" ixz="0" 
               iyy="0.017098958333333334" iyz="0" izz="0.03003125"/>
    </inertial>
  </link>
  
  <joint name="right_wheel_joint" type="continuous">
    <axis xyz="0 1 0"/>
    <parent link="base_link"/>
    <child link="right_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.0 ${-wheel_separation/2} ${-base_height/2}"/>
  </joint>
  
  <!-- Caster wheel -->
  <link name="caster_wheel">
    <visual>
      <material name="darkgray"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.01"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.01"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="5"/>
      <inertia ixx="0.0002" ixy="0.0" ixz="0.0" iyy="0.0002" iyz="0.0" izz="0.0002"/>
    </inertial>
  </link>
  
  <joint name="caster_wheel_joint" type="continuous">
    <axis xyz="0 1 0"/>
    <parent link="base_link"/>
    <child link="caster_wheel"/>
    <origin rpy="0 0 0" xyz="${base_len/2*0.8} 0 ${-base_height/2}"/>
  </joint>
  
  <!-- Macros for other components -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <mass value="${m}" />
      <inertia ixx="${m / 12.0 * (d*d + h*h)}" ixy="0.0" ixz="0.0" 
               iyy="${m / 12.0 * (w*w + h*h)}" iyz="0.0" izz="${m / 12.0 * (w*w + d*d)}" />
    </inertial>
  </xacro:macro>

  <xacro:macro name="dorso" params="parent depth width height xyz rpy">
    <link name="dorso_link">
      <xacro:box_inertia m="1" w="${width}" h="${height}" d="0.01" />
      <visual>
        <origin xyz="0.0 0.0 ${height/2}"/>
        <material name="lightgray" />
        <geometry>
          <box size="${depth} ${width} ${height}" />
        </geometry>
      </visual>
      <collision>
        <origin xyz="0.0 0.0 ${height/2}"/>
        <geometry>
          <box size="${depth} ${width} ${height}" />
        </geometry>
      </collision>
    </link>
    <joint name="dorso_joint" type="fixed">
      <parent link="${parent}"/>
      <child link="dorso_link"/>
      <origin xyz="${xyz}" rpy="${rpy}"/>
    </joint>
  </xacro:macro>

  <xacro:macro name="arm_support" params="parent width height depth xyz rpy">
    <link name="arm_support_link">
      <xacro:box_inertia m="1" w="${width}" h="${height}" d="0.01" />
      <visual>
        <material name="lightgray" />
        <geometry>
          <box size="${depth} ${width} ${height}" />
        </geometry>
      </visual>
      <collision>
        <geometry>
          <box size="${depth} ${width} ${height}" />
        </geometry>
      </collision>
    </link>
    <joint name="arm_support_joint" type="fixed">
      <parent link="${parent}"/>
      <child link="arm_support_link"/>
      <origin xyz="${xyz}" rpy="${rpy}"/>
    </joint>
  </xacro:macro>

  <xacro:macro name="imu" params="parent xyz rpy">
    <link name="imu_link" />
    <joint name="imu_joint" type="fixed">
      <parent link="${parent}" />
      <child link="imu_link" />
      <origin xyz="${xyz}" rpy="${rpy}" />
    </joint>
  </xacro:macro>

  <!-- Add the major components to the robot -->
  <xacro:dorso parent="base_link" depth="${dorso_len}" width="${dorso_width}" height="${dorso_height}" 
               xyz="${-base_len/2 + (dorso_len/2)} 0 ${base_height/2}" rpy="0 0 0"/>
               
  <xacro:arm_support parent="dorso_link" width="${arm_support_width}" height="${arm_support_height}" 
                     depth="${arm_support_len}" xyz="${dorso_len/2 + arm_support_len/2} 0 ${arm_z_position}" rpy="0 0 0"/>
                     
  <xacro:sensor_hokuyo parent="base_link" xyz="${base_len/2 + 0.017 + 0.024} 0 ${0.02 - base_height/2}" rpy="3.14 0 0" name="ground"/>
  
  <xacro:sensor_hokuyo parent="base_link" xyz="${-base_len/2 - 0.017 - 0.024} 0 ${0.02 - base_height/2}" rpy="3.14 0 3.14" name="back"/>
  
  <xacro:imu parent="base_link" xyz="-0.01 0 ${0.02 - base_height/2}" rpy="-0.014161 -0.0203861 0" />
  
  <xacro:realsense_camera name="camera" parent="dorso_link" xyz="${dorso_len/2 + 0.05} 0 ${dorso_height + 0.053}" rpy="0 0 0"/>
  
  <!-- Use generic system for simulation -->
  <ros2_control name="boris_sim" type="system">
    <hardware>
      <plugin>mock_components/GenericSystem</plugin>
    </hardware>
    <joint name="left_wheel_joint">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="right_wheel_joint">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
  </ros2_control>
  
  <!-- Include gazebo differential drive plugin -->
  <gazebo>
    <plugin name="diff_drive" filename="libgazebo_ros_diff_drive.so">
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>${wheel_separation}</wheel_separation>
      <wheel_diameter>${wheel_radius * 2.0}</wheel_diameter>
      <max_wheel_torque>200</max_wheel_torque>
      <max_wheel_acceleration>10.0</max_wheel_acceleration>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>
    </plugin>
  </gazebo>

  <!-- Gazebo ROS2 control plugin -->
  <gazebo>
    <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
      <robotNamespace>/</robotNamespace>
      <parameters>$(find fbot_simulation)/config/controllers.yaml</parameters>
    </plugin>
  </gazebo>

</robot>
